[{
  "commit": "ec27567bcdd76a58a94f01e5d0a8431e9cbd0dcd",
  "text": "require 'angular-animate'\nrequire './cwa.scss'\nco = require 'co'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./').name\n  require('config').name\n  require('./cwaConfig').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Fri Feb 26 14:48:28 2016 -0800",
  "message": "add-pubnub"
},
{
  "commit": "c935d61f22c6b6f63790ac56a2f4e0e0b44b92dd",
  "text": "require 'angular-animate'\nrequire './cwa.scss'\nco = require 'co'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./').name\n  require('config').name\n  require('./cwaConfig').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Feb 4 14:00:33 2016 -0800",
  "message": "cleanup-separate-out-hotkeys"
},
{
  "commit": "d51d89f7637578646d37a75960ccac1cba224856",
  "text": "require 'angular-animate'\nrequire './cwa.scss'\nco = require 'co'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./').name\n  require('config').name\n  require('./cwaConfig').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Feb 4 13:57:14 2016 -0800",
  "message": "merge-master"
},
{
  "commit": "2fcbf0a547222fb1e6bac15bb1be27c9ff62f76f",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./').name\n  require('config').name\n  require('./cwaConfig').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Feb 4 13:33:50 2016 -0800",
  "message": "feat-Raven-for-Exception-Tracking"
},
{
  "commit": "e25a5193e5f1fca1f61a1aceeab24bcafcc24cc0",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./').name\n  require('config').name\n  require('./cwaConfig').name\n  # require('vendor/raven').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Feb 4 13:09:06 2016 -0800",
  "message": "refactor-cwa-configs"
},
{
  "commit": "3af2064ccea2512b2b552fc8da09f056be95f1ae",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\nrequire 'pubnub'\nrequire 'pubnub-angular'\n\ndeps = [\n  'ngAnimate'\n  'pubnub.angular.service'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig, _User, $state, $window, appConfig, $stateParams, $location) ->\n        { clientId } = $stateParams\n        @config = uiStateConfig\n\n        # Note: The following 3 lines may make you sad.\n        if _User.isBookkeeper() and not clientId\n          id = $window.prompt 'Please enter a client ID to impersonate.'\n          $location.url '/' + id + '/'\n\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n\n            if clientId?\n              User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run (PubNub) ->\n  PubNub.init\n    subscribe_key: 'sub-c-3e97b33c-3faf-11e5-81a9-0619f8945a4f',\n    publish_key: 'nope',\n    auth_key: 'service:6d898c87-0c09-4f62-bd6d-029c33dbd0e8'\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Wed Feb 3 20:39:22 2016 -0800",
  "message": "Fixes-for-merge"
},
{
  "commit": "e6d5f3a5c43b27caf19c86bca75bd6e30422b318",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\nrequire 'pubnub-angular'\n\ndeps = [\n  'ngAnimate'\n  'pubnub.angular.service'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig, _User, $state, $window, appConfig, $stateParams, $location) ->\n        { clientId } = $stateParams\n        @config = uiStateConfig\n\n        # Note: The following 3 lines may make you sad.\n        if _User.isBookkeeper() and not clientId\n          id = $window.prompt 'Please enter a client ID to impersonate.'\n          $location.url '/' + id + '/'\n\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n\n            if clientId?\n              User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run (PubNub) ->\n  PubNub.init\n    subscribe_key: 'sub-c-3e97b33c-3faf-11e5-81a9-0619f8945a4f',\n    publish_key: 'nope',\n    auth_key: 'service:6d898c87-0c09-4f62-bd6d-029c33dbd0e8'\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Wed Feb 3 14:14:08 2016 -0800",
  "message": "Merge-branch-master-into-bridge"
},
{
  "commit": "cb029d3aca2c5f9601758a9cbdc9c562e95e5810",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\nrequire 'pubnub-angular'\n\ndeps = [\n  'ngAnimate'\n  'pubnub.angular.service'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run (PubNub) ->\n  PubNub.init\n    subscribe_key: 'sub-c-3e97b33c-3faf-11e5-81a9-0619f8945a4f',\n    publish_key: 'nope',\n    auth_key: 'service:6d898c87-0c09-4f62-bd6d-029c33dbd0e8'\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Wed Feb 3 14:12:20 2016 -0800",
  "message": "Last-garbage-push-before-sticking-to-strict-branches"
},
{
  "commit": "98d59c228ece57cb6e792fbe864b05b0cab66654",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig, _User, $state, $window, appConfig, $stateParams, $location) ->\n        { clientId } = $stateParams\n        @config = uiStateConfig\n\n        # Note: The following 3 lines may make you sad.\n        if _User.isBookkeeper() and not clientId\n          id = $window.prompt 'Please enter a client ID to impersonate.'\n          $location.url '/' + id + '/'\n\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n\n            if clientId?\n              User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n\n",
  "author": "levindixon <levindixon@gmail.com>",
  "date": "Mon Feb 1 13:32:04 2016 -0800",
  "message": "remove-constants"
},
{
  "commit": "70457f33a4b6cb67fd8f59f70b6241fbb9d9e3fd",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyCodes',\n  ENTER: 13\n  ESCAPE: 27\n  END: 35\n  LEFT_ARROW: 37\n  UP_ARROW: 38\n  RIGHT_ARROW: 39\n  DOWN_ARROW: 40\n  TAB: 9\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyCodes) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig, _User, $state, $window, appConfig, $stateParams, $location) ->\n        { clientId } = $stateParams\n        @config = uiStateConfig\n\n        # Note: The following 3 lines may make you sad.\n        if _User.isBookkeeper() and not clientId\n          id = $window.prompt 'Please enter a client ID to impersonate.'\n          $location.url '/' + id + '/'\n\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n\n            if clientId?\n              User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope, keyCodes) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyCodes)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n\n",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Fri Jan 29 12:25:09 2016 -0800",
  "message": "Added-prompt-for-client-ID"
},
{
  "commit": "676b36f919de73aa786c85319ce6f38e67ab8a34",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyCodes',\n  ENTER: 13\n  ESCAPE: 27\n  END: 35\n  LEFT_ARROW: 37\n  UP_ARROW: 38\n  RIGHT_ARROW: 39\n  DOWN_ARROW: 40\n  TAB: 9\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyCodes) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope, keyCodes) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyCodes)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Fri Jan 8 16:01:58 2016 -0800",
  "message": "Lightening-pagination-elem-on-hover"
},
{
  "commit": "52f7496dde9076fbef1561eadef23d7f5520141f",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyCodes',\n  ENTER: 13\n  ESCAPE: 27\n  END: 35\n  LEFT_ARROW: 37\n  UP_ARROW: 38\n  RIGHT_ARROW: 39\n  DOWN_ARROW: 40\n  TAB: 9\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyCodes) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope, keyCodes) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyCodes)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Thu Jan 7 13:46:16 2016 -0800",
  "message": "Removing-extra-keyCodes"
},
{
  "commit": "2f2c2012ef3b300335d6522b8891df39bedcc735",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyCodes',\n  ENTER: 13\n  ESCAPE: 27\n  PAGE_UP: 33\n  PAGE_DOWN: 34\n  END: 35\n  HOME: 36\n  LEFT_ARROW: 37\n  UP_ARROW: 38\n  RIGHT_ARROW: 39\n  DOWN_ARROW: 40\n  TAB: 9\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyCodes) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope, keyCodes) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyCodes)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Thu Jan 7 13:28:30 2016 -0800",
  "message": "Capitalizing-key-code-constants"
},
{
  "commit": "8cf0a61ed85d6e0757453d5a939135005ad33908",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyCodes',\n  up: 38\n  down: 40\n  left: 37\n  right: 39\n  return: 13\n  tab: 9\n  shift: 16\n  command: 91\n  esc: 27\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyPress) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n\n.run ($document, $rootScope, keyPress) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyPress)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Thu Jan 7 09:49:58 2016 -0800",
  "message": "Changing-KeyPress-constant-name-to-keyCodes"
},
{
  "commit": "c507533a440606347e0b159a6ac2e7c9c6ce18af",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n#Key codes for keyboard shortcut navigation\n.constant 'keyPress',\n  up: 38\n  down: 40\n  left: 37\n  right: 39\n  return: 13\n  tab: 9\n  shift: 16\n  command: 91\n  esc: 27\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider, keyPress) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n\n.run ($document, $rootScope, keyPress) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e, keyPress)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Wed Jan 6 15:28:52 2016 -0800",
  "message": "Making-angular-constants-for-key-codes"
},
{
  "commit": "e4552270b6aa85ad23a921e5b73cec815ea57539",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# Expose key press as an event.\n.run ($document, $rootScope) ->\n  $document.bind 'keyup', (e) ->\n    $rootScope.$broadcast('keyup', e)\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Thu Dec 17 14:36:18 2015 -0800",
  "message": "WIP-shorts"
},
{
  "commit": "a3b02275220e40987097ff67df6b36b7fbb3e5e7",
  "text": "require './cwa.scss'\nco = require 'co'\nprintCache = require 'app/util/printCache'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n  require('dev/console').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n\n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run (Store, $window, blConsole, config) ->\n  if config.ENV is 'dev'\n    $window.$printCache = -> printCache _(Store.$listCache()), blConsole\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Levin Dixon <levin@bench.co>",
  "date": "Tue Dec 8 01:08:41 2015 -0800",
  "message": "initialize-printCache-util-when-in-dev-ENV"
},
{
  "commit": "765a57ea8de5689ef59243dea50055be7ad167ec",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider, config, $logProvider, $compileProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $logProvider.debugEnabled config.ENV is 'dev'\n\n  $compileProvider.debugInfoEnabled config.ENV is not 'production'\n\n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, $log, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    $log.debug error\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Levin Dixon <levin@bench.co>",
  "date": "Tue Dec 8 01:06:58 2015 -0800",
  "message": "enable-log.debug-when-in-dev-ENV-disable-debugInfo-when-in-production-ENV"
},
{
  "commit": "5ba8aeb11bc9a2b225e95e6676022728107080c5",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # Let's make sure they're still logged in by refreshing the user data.\n    User.$fetch().then ->\n      if not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name isnt appConfig.defaultState.state and fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Mon Nov 30 17:03:37 2015 -0800",
  "message": "Tweaks-to-login-redirect"
},
{
  "commit": "ab620810588df9ceb38a33ac317a64776b840881",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('config').name\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, config, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Mon Nov 30 15:50:51 2015 -0800",
  "message": "Tweaks-to-logout-so-it-works-across-various-builds"
},
{
  "commit": "56d990c21bfb2f936c659b4d3be8470d4cad453e",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Wed Nov 25 12:30:37 2015 -0800",
  "message": "Merge-branch-master-into-cwa-misc-fixes"
},
{
  "commit": "aec37c217927f8e12d5f54cb447b3e2caa4fcc38",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, $urlRouter, User, config) ->\n  # TODO : We had this in the past, but it's worth reviewing support as $locationChangeSuccess requires\n  #        HTML5 mode? Not sure whether the fallback for html 5 mode is sufficient.\n  $rootScope.$on '$locationChangeSuccess', (e, toState) ->\n    e.preventDefault()\n\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n      else\n        $urlRouter.sync()\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Tue Nov 24 23:21:41 2015 -0800",
  "message": "Fix-401-redirect-speed-on-first-entry"
},
{
  "commit": "2a853556c66629acf1ec244f8e9c6340ba68f167",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# .run ($rootScope, config) ->\n#   $rootScope.$on 'blLoginFailed', ->\n#     location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, User, config) ->\n  # ensure that the user is always logged in.\n  $rootScope.$on '$stateChangeStart', (e, toState) ->\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # Consider using:\n      # require('data/requireLogin').name # forces login on all routes\n      # in the future instead of this and the .run redirect below?\n\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Levin Dixon <levin@bench.co>",
  "date": "Tue Nov 24 14:36:10 2015 -0800",
  "message": "remove-js-error.message-from-user-facing-notification"
},
{
  "commit": "4023366bf6cfef9d751dd7452d5fc3f3f95b4188",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n  require('ui/web/navbar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# .run ($rootScope, config) ->\n#   $rootScope.$on 'blLoginFailed', ->\n#     location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, User, config) ->\n  # ensure that the user is always logged in.\n  $rootScope.$on '$stateChangeStart', (e, toState) ->\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # Consider using:\n      # require('data/requireLogin').name # forces login on all routes\n      # in the future instead of this and the .run redirect below?\n\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Tue Nov 24 12:55:58 2015 -0800",
  "message": "Cleanup-subnavbar-stuff"
},
{
  "commit": "e57a419c08c9f9002369dbdadbf2ae16d3369587",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams, config) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          if not User.getClientId()\n            # Consider using:\n            # require('data/requireLogin').name # forces login on all routes\n            # in the future instead of this and the .run redirect below?\n\n            # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n            location.href = \"#{config.api.root}/login\"\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n# .run ($rootScope, config) ->\n#   $rootScope.$on 'blLoginFailed', ->\n#     location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, User, config) ->\n  # ensure that the user is always logged in.\n  $rootScope.$on '$stateChangeStart', (e, toState) ->\n    User.$promise.finally ->\n      if toState.name isnt config.loginState and not User.isLoggedIn()\n        location.href = \"#{config.api.root}/login\"\n\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig, User) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    if not User.getClientId()\n      # Consider using:\n      # require('data/requireLogin').name # forces login on all routes\n      # in the future instead of this and the .run redirect below?\n\n      # We call location.href instead of a $broadcast because this will kick in faster/cleaner.\n      location.href = \"#{config.api.root}/login\"\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Paul Michalak <onepm.ca@gmail.com>",
  "date": "Tue Nov 10 17:04:46 2015 -0800",
  "message": "Auth-redirects-first-test"
},
{
  "commit": "71e0d517c62c5ffa14b29fec0af21480ca517913",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: require \"./cwa.html\"\n      resolve:\n        _User: (User, $stateParams) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Tue Oct 27 14:09:26 2015 -0700",
  "message": "feat-refactor-reports-download-and-unify-reports-ledger-view"
},
{
  "commit": "3e3db712e4ab633469c72fa8b137e471e81de518",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, $stateParams) -> co ->\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            { clientId } = $stateParams\n            User.setClientId clientId\n\n          return User\n        _ClientSettings: (ClientSettings, User, $stateParams) -> co ->\n          yield User.$promise\n          clientId = User.getClientId()\n\n          settings = new ClientSettings clientId\n          yield settings.$promise\n\n          return settings\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Mon Oct 26 14:30:50 2015 -0700",
  "message": "add-zero-state-report-feature-flag"
},
{
  "commit": "fd02dec49705d33e7c7f45786be2dab630394233",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person, $stateParams) -> co ->\n          { clientId } = $stateParams\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            User.setClientId clientId\n\n          return User\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "Jamie Woodbury <Jamie.Woodbury@gmail.com>",
  "date": "Wed Oct 21 20:28:38 2015 -0700",
  "message": "Merge-pull-request-421-from-BenchLabs-filethis-polish"
},
{
  "commit": "2ba801a915052ef943de4ae973b3d3ea584dc28e",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      url: '/{clientId:[0-9]*}'\n      params:\n        clientId:\n          value: ''\n          squash: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person, $stateParams) -> co ->\n          { clientId } = $stateParams\n          yield User.$promise\n          \n          if User.isBookkeeper()\n            User.setClientId clientId\n\n          return User\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    NotificationsService.add \"Hm, Looks like something went wrong when loading that page\",\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Wed Oct 21 09:36:10 2015 -0700",
  "message": "feat-impersonation"
},
{
  "commit": "7e4f051d7c79f0e9a338989c2ed76b0890cbaf30",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    errorMessage = error.message or \"Hm, Looks like something went wrong when loading that page\"\n    NotificationsService.add errorMessage,\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Tue Oct 20 16:55:14 2015 -0700",
  "message": "WIP-better-error-handling"
},
{
  "commit": "3e451e281cec50d0a542dc04d9782d860c4efa02",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService, $state, appConfig) ->\n  $rootScope.$on '$stateChangeError', (event, toState, toParams, fromState, fromParams, error) ->\n    # errors are swallowed by ui-router, so we need to\n    # display it here\n    console.error error\n\n    # navigate to default state if this is our first entry to the app\n    if fromState.name is ''\n      $state.go appConfig.defaultState.state\n\n    # notify the user of a problem\n    NotificationsService.add \"Hm, Looks like something went wrong when loading that page\",\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Oct 15 18:55:28 2015 -0700",
  "message": "feat-handle-ui-router-errors"
},
{
  "commit": "976fc10a7a546c49c9b535d5cec2d1a4be9e8da3",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div \n              class=\"content\"\n              ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{\n                'right-sidebar_is-open': vm.config.sidebarOpen,\n                'right-sidebar_is-closed': !vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService) ->\n  $rootScope.$on '$stateChangeError', ->\n    NotificationsService.add 'Oops, Something went wrong',\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Oct 15 14:13:57 2015 -0700",
  "message": "fix-sidebar"
},
{
  "commit": "6bf5aa0dacbdeb846b9ea55012dbdae46816d244",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{'right-sidebar_is-open': vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"\n\n.run ($rootScope, NotificationsService) ->\n  $rootScope.$on '$stateChangeError', ->\n    NotificationsService.add 'Oops, Something went wrong',\n      type: 'error'\n      length: 4\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Wed Oct 14 16:41:28 2015 -0700",
  "message": "error-handleing-and-null-states"
},
{
  "commit": "d93dca482e8d1fb06f167be9c068553705455fba",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{'right-sidebar_is-open': vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Mon Sep 28 14:47:33 2015 -0700",
  "message": "Merge-with-develop"
},
{
  "commit": "6074b0ec9f70504ff81623cb30f7041e52250b4f",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{'right-sidebar_is-open': vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Mon Sep 28 12:05:02 2015 -0700",
  "message": "merge-develop"
},
{
  "commit": "6ccb9f1e0e6dc1545713cdd1647dd3750512b53c",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider, $animateProvider) ->\n  $urlRouterProvider.otherwise '/'\n  \n  $animateProvider.classNameFilter /bl-animate/\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Wed Sep 23 13:59:21 2015 -0700",
  "message": "WIP-Added-loading-spinner"
},
{
  "commit": "c9faa4a0aaa31113fabc178d2bdc70bc94ea1313",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Fri Sep 18 10:36:15 2015 -0700",
  "message": "Merge-with-develop"
},
{
  "commit": "edb3d5aaeffc74168dab0249d1571cb69d8b2c1c",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Jamie Woodbury <Jamie.Woodbury@gmail.com>",
  "date": "Thu Sep 17 12:45:50 2015 -0700",
  "message": "Merge-pull-request-375-from-BenchLabs-null-states"
},
{
  "commit": "7f43d8e02d52f6ff8330709845d6948bec6777b9",
  "text": "require './cwa.scss'\nco = require 'co'\n\nrequire 'angular-animate'\n\ndeps = [\n  'ngAnimate'\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Tue Sep 15 17:32:11 2015 -0700",
  "message": "Added-notification-types"
},
{
  "commit": "d92b7ce8116ea38c298cbf4a196189352fcd757c",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/notifications').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n          <bl-notifications></bl-notifications>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Mon Sep 14 16:14:07 2015 -0700",
  "message": "Began-notification-directive"
},
{
  "commit": "f5a31cb1a2e8b157f1c5e812a41034c752f73f2f",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n\n.run ($rootScope, config) ->\n  $rootScope.$on 'blLoginFailed', ->\n    location.href = \"#{config.api.root}/login\"",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Sep 10 22:33:59 2015 -0700",
  "message": "feat-redirect-to-login-on-failed-api-call"
},
{
  "commit": "b94fd936546bef480f1d0d601728739d5c08af5d",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n  require('ui/web/spinner').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Sep 10 21:13:47 2015 -0700",
  "message": "feat-add-spinner"
},
{
  "commit": "ac5cc79c21d4f0f19f5430edf5affd31a3f8b9cf",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        _User: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Thu Sep 10 21:08:17 2015 -0700",
  "message": "because-who-doesn-t-like-generators"
},
{
  "commit": "c563aee26e35b39e22ddffb3c2731b2b4824fd86",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              class=\"right-sidebar\"\n              ng-class=\"{'right-sidebar_is-open': vm.config.sidebarOpen}\">\n              <div ui-view=\"sidebar-right\"></div>\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Wed Sep 9 13:21:26 2015 -0700",
  "message": "feat-search-pagination"
},
{
  "commit": "d86df662edd2500c8c4fa5b50bee4cb8ff1d5a9f",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs: 'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div\n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div\n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div\n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div\n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Mon Aug 31 09:55:48 2015 -0700",
  "message": "fixing-merge-conflicts-from-develop"
},
{
  "commit": "454dfc0c6a868893f52e24edf655d75bb0bc3e3c",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: false\n  \n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        @config = uiStateConfig\n        return @\n      controllerAs:'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div \n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.config.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div \n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Mon Aug 24 09:43:52 2015 -0700",
  "message": "feat-generic-sidebar-and-transaction-view-cleanup"
},
{
  "commit": "a74e00f78d6a6e58f84a279673e15df6dfbd93ca",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.factory 'uiStateConfig', ->\n  sidebarOpen: true\n  \n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      controller: (uiStateConfig) ->\n        _.extend @, uiStateConfig\n        return @\n      controllerAs:'vm'\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <div class=\"content\">\n              <div \n                class=\"content_header\"\n                ui-view=\"subNavbar\">\n              </div>\n              <ui-view\n                class=\"content_body\"\n                ng-class=\"{'right-sidebar-open': vm.sidebarOpen}\">\n              </ui-view>\n            </div>\n            <div \n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Fri Aug 21 10:14:53 2015 -0700",
  "message": "cleanup-transactions-page"
},
{
  "commit": "79fc3818e8f92d0a41115bb3c9400a2efbd441a3",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div\n                class=\"bl-navbar_nav\"\n                ui-view=\"navbar\">\n              </div>\n              <div\n                class=\"bl-navbar_controls\"\n                ui-view=\"navbar-controls\">\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div\n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: ->\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n.run () ->\n  # TODO use Settings model after jsonp issue is fixed\n  publicKey = \"pk_4c0CEenOOtPmtl24LxLBc8xPmRU9V\"\n\n  Stripe.setPublishableKey publicKey\n",
  "author": "benchlachlan <lachlan@bench.co>",
  "date": "Thu Aug 20 17:41:23 2015 -0700",
  "message": "Stripe-validations-working"
},
{
  "commit": "1224f6140adba3cdf287c4d9cd063be4b453abaf",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n    \n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <ui-view \n              class=\"content\">\n            </ui-view>\n            <div \n              ui-view=\"sidebar-right\"\n              class=\"right-sidebar\">\n            </div>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Wed Aug 19 15:04:18 2015 -0700",
  "message": "small-refactor"
},
{
  "commit": "ade43988c84cd649801f83f4da65a23578cd95dc",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n    \n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <ui-view \n              class=\"content\">\n            </ui-view>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Wed Aug 19 14:44:36 2015 -0700",
  "message": "refactor-transaction-sidebar"
},
{
  "commit": "85d3ad1f983b8a3b4d1d3090dcdbebb74cf61a9c",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div \n                class=\"bl-navbar_nav\"\n                ui-view=\"navbar\">\n              </div>\n              <div \n                class=\"bl-navbar_controls\"\n                ui-view=\"navbar-controls\">\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div \n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: ->\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <jamie.woodbury@gmail.com>",
  "date": "Tue Aug 11 16:26:47 2015 -0700",
  "message": "undo-revert-of-cwa-changes"
},
{
  "commit": "0df20aa58fc6527565f1813b18b90a585777d823",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_buttons\"\n                  ui-view=\"navbar-buttons\">\n                </div>\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div \n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: ->\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Thu Aug 6 16:43:26 2015 -0700",
  "message": "New-date-filter-directive"
},
{
  "commit": "075510b2bb0079c32251530f24ae3b4a9e8319de",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div class=\"bl-navbar_container\">\n                <div \n                  class=\"bl-navbar_nav\"\n                  ui-view=\"navbar\">\n                </div>\n                <div \n                  class=\"bl-navbar_controls\"\n                  ui-view=\"navbar-controls\">\n                </div>\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div \n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: ->\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "Josh Conley <joshsconley@gmail.com>",
  "date": "Wed Jul 29 17:32:44 2015 -0700",
  "message": "Sidebar-topbar-updates"
},
{
  "commit": "448d7df8b6324dc5710b67cf8102ac310f164eb5",
  "text": "",
  "author": "Lachlan MacKenzie <lachlan@bench.co>",
  "date": "Fri Jul 24 10:50:18 2015 -0700",
  "message": "Revert-271-chrome-auto-complete-not-playing-nice"
},
{
  "commit": "cce8c8e01572cde12909dd6ee3b0880b42543767",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\"\n              settings-state=\"cwa.settings.profile\"\n              settings-state-active=\"cwa.settings\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div \n                class=\"bl-navbar_nav\"\n                ui-view=\"navbar\">\n              </div>\n              <div \n                class=\"bl-navbar_controls\"\n                ui-view=\"navbar-controls\">\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div \n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: ->\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Mon Jul 20 10:19:13 2015 -0700",
  "message": "feat-sidebar-refactor"
},
{
  "commit": "7959fd9bef9545e6f6eae1e685a68c6e907c93af",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <div class=\"bl-navbar\">\n              <div \n                class=\"bl-navbar_nav\"\n                ui-view=\"navbar\">\n              </div>\n              <div \n                class=\"bl-navbar_controls\"\n                ui-view=\"navbar-controls\">\n              </div>\n            </div>\n            <ui-view class=\"content\"></ui-view>\n            <div \n              ui-view=\"right-drawer\"\n              class=\"right-drawer\">\n            </div>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Fri Jul 17 13:09:12 2015 -0700",
  "message": "refactor-use-ui-views"
},
{
  "commit": "f9bd454ccbf0c66982c5f99826353df72a8ec9f4",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('./settings').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Thu Jul 16 13:30:52 2015 -0700",
  "message": "feat-settings-page"
},
{
  "commit": "7613d09f8b3b18f20804f3d2befb628b77dc7728",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n  require('ui/web/drawer').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Wed Jul 15 10:59:59 2015 -0700",
  "message": "feat-generic-drawer-position"
},
{
  "commit": "c78ccef4924f18de1fc164f2cccf453b78d7984f",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            # yield (new Person User.userId).$promise\n\n\n",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Mon Jul 13 21:26:30 2015 -0700",
  "message": "feat-income-statement"
},
{
  "commit": "f7f914176a89efec10ba7fa1ff4ff6d963afa8c1",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person) ->\n          return co ->\n            yield User.$promise\n            yield (new Person User.getClientId()).$promise",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Mon Jul 13 13:15:03 2015 -0700",
  "message": "fix-gravatar-null-state"
},
{
  "commit": "b8496c47d5916a4bba0555c21ece7972c6a85c8a",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('./accounts').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person, $stateParams) ->\n          return co ->\n            yield User.$promise\n            yield (new Person User.getClientId()).$promise",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Mon Jul 13 11:54:23 2015 -0700",
  "message": "feat-add-accounts-tab"
},
{
  "commit": "24ebea1c0ce5409d62634079e9f445dd8c826663",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"\n              default-state=\"cwa.newsFeed\">\n            </bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person, $stateParams) ->\n          return co ->\n            yield User.$promise\n            yield (new Person User.getClientId()).$promise",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Mon Jul 13 11:15:01 2015 -0700",
  "message": "feat-sidebar-header-navigation"
},
{
  "commit": "5987d4cbd75b89e4087e9098ec26d8a5d8d11747",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('ui/web/base').name\n  require('ui/web/modal').name\n  require('ui/web/clientSettings').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar\n              on-settings-click=\"vm.openSettingsModal()\"></bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      controllerAs: 'vm'\n      controller: (ngDialog) ->\n        @openSettingsModal = ->\n          ngDialog.open\n            template: '<bl-client-settings></bl-client-settings>'\n            plain: true\n            className: 'bl-modal-default'\n        return @\n      resolve:\n        User_: (User, Person, $stateParams) ->\n          return co ->\n            yield User.$promise\n            yield (new Person User.getClientId()).$promise",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Fri Jul 10 10:12:11 2015 -0700",
  "message": "feat-settings-modal-and-news-feed-card"
},
{
  "commit": "590cf4660d6eaf94aac82517894087e0126bb645",
  "text": "require './cwa.scss'\nco = require 'co'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('ui/web/base').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar></bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''\n      resolve:\n        User_: (User, Person, $stateParams) ->\n\n          return co ->\n            yield User.$promise\n            yield (new Person User.getClientId()).$promise",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Thu Jul 9 16:01:04 2015 -0700",
  "message": "feat-bl-sref-active"
},
{
  "commit": "45348d6335b2b9cb77ee83e191bc3bf3a6ef3b02",
  "text": "require './cwa.scss'\n\ndeps = [\n  require 'angular-ui-router'\n  require('./cwaConfig').name\n  require('./newsFeed').name\n  require('./reports').name\n  require('ui/web/base').name\n  require('ui/web/sidebar').name\n]\n\nmodule.exports = angular.module 'bench.app.cwa', deps\n\n.config ($stateProvider, appConfig, $urlRouterProvider) ->\n  $urlRouterProvider.otherwise '/'\n\n  $stateProvider\n    .state 'cwa',\n      abstract: true\n      template: ->\n        '''\n          <div class=\"wrapper\">\n            <bl-sidebar></bl-sidebar>\n            <ui-view class=\"content\"></ui-view>\n          </div>\n        '''",
  "author": "jamiewoodbury <Jamie.Woodbury@gmail.com>",
  "date": "Thu Jul 9 13:42:02 2015 -0700",
  "message": "feat-basic-cwa-scaffolding"
}]
